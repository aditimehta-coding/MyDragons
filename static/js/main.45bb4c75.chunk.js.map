{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/Appnew.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","Appnew","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAiBiBA,MAfjB,YAAkC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAOC,EAAK,EAALA,GAE1B,OAEE,sBAAKC,UAAY,mDAAjB,UACA,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,4BACf,gCACA,mCAAMF,EAAN,OACA,mCAAMC,EAAN,OACH,mCAAMC,EAAN,OACG,oDCSaI,MAnBjB,YACG,IADgBC,EACjB,EADiBA,OAEf,OACQ,8BACMA,EAAOC,KAAK,SAACC,EAAKC,GACM,OACE,cAAE,EAAF,CACER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHPS,SCOvCC,MAdjB,YACE,EADkBC,YACjB,IAD6BC,EAC9B,EAD8BA,aAE5B,OACA,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YC+CEC,G,wDA5Cd,aAAc,IAAD,8BACZ,gBAeFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAfxC,EAAKC,MAAQ,CACZvB,OAAO,GACPK,YAAa,IAJF,E,qDASb,WAAoB,IAAD,OAChBmB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAS1C,WACC,MAA+BC,KAAKN,MAA7BvB,EAAP,EAAOA,OAASK,EAAhB,EAAgBA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAA/B,GACrC,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAQhC,EAAOkC,OAGZ,sBAAKtC,UAAY,KAAjB,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACF,cAAC,EAAD,CAAUlB,OAAQ8B,SAPK,6C,GA3BLK,cCKNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.45bb4c75.chunk.js","sourcesContent":["//import logo from './logo.svg';\r\nimport './Card.css';\r\nfunction Card({name, email, id}) {\r\n\t//string url = \"https://robohash.org/\" + id + \"?200x200\";\r\n  return (\r\n  \t\r\n    <div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n    <img alt=\"\" src={`https://robohash.org/${id}?set=set2&size=200x200`} />\r\n    <div>\r\n    <h2> {name} </h2>\r\n    <h2> {email} </h2>\r\n\t<h2> {id} </h2>\r\n    <p> Hii people </p>\r\n    </div>\r\n    </div>\r\n);\r\n  }\r\n  export default Card;\r\n\r\n","//import './Card.css';\r\nimport Card from './Card';\r\nfunction CardList({robots}) \r\n  {\r\n    return (\r\n            <div>{ \r\n                  robots.map ((user,i)=> {\r\n                                          return(\r\n                                            < Card key={i}\r\n                                              id={robots[i].id}\r\n                                              name={robots[i].name}\r\n                                              email={robots[i].email}\r\n                                              />\r\n                                            );\r\n                                          }\r\n                              )\r\n                  }</div>\r\n\r\n                );        \r\n  }\r\n\r\n  export default CardList;\r\n\r\n","//import Card from './Card';\r\nfunction SearchBox({searchfield,searchChange}) \r\n  {\r\n    return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );        \r\n  }\r\n\r\n  export default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n//import {robots} from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport'./App.css';\r\n\r\nclass Appnew extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield: '',\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => this.setState({robots:users})\r\n      \t);\r\n     }\r\n\r\nonSearchChange = (event) =>{\r\n\tthis.setState({searchfield: event.target.value})\r\n}\r\n\r\n\r\n\trender(){\r\n\t\tconst {robots , searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robots => {\r\n\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\t\treturn !robots.length ? <h1>Loading</h1> :\r\n\t\r\n\t\t\t (\r\n  \t\t\t<div className = 'tc'>\r\n  \t\t\t<h1 className='f2'>RoboFriends</h1>\r\n  \t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n  \t\t\t<Scroll>\r\n\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t</Scroll>\r\n\r\n\t\t</div>\r\n  \t\t);\r\n\r\n\t\t\r\n \r\n}\r\n}\r\n\r\nexport default Appnew;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Appnew from './containers/Appnew';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Appnew/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}